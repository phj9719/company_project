<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">                                                                                                            
<!--                                                                                                        
	/**                                                                                                       
	 *                                                                                                        
	 * WARNING: Auto create                                                                                   
	 * Template File Version : 1.0                                                                            
	 * Create :2017-07-27 10:11                                                                  
	 *                                                                                                        
	 **/                                                                                                      
	 *================================================================                  
     * 프로그램 ID  	: DAY00108
     * 프로그램 명     	: 1-8  월간 인지관리지원 기록
     * Description 	: 
     *================================================================                  
                작성일자         			|  작성자        |  비고                                    
     *================================================================                  
       2022-05-24 10:00        	|  박영주		| 최초작성                         

     *================================================================                      
     *  Statement List                                                                        
     *================================================================                      
        DAY00108_DS_LIST_S		조회                                                                                     
     *================================================================                      
-->
<mapper namespace="DAY00108">
	<!-- 조회 -->
    <select id="DAY00108_DS_LIST_S" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    /*  DAY00108_DS_LIST_S */
		SELECT bm.m_jumin1
			 , bm.m_jumin2
		     , bm.sicode
		     , bm.거주현황 AS s_nm
		     , bm.m_group
		     , bm.m_code
		     , bm.m_name
		     , bm.성별 AS sex_nm
		     , FN_GRADE_NM(bm.sicode, bm.m_code, #{date_to}) AS grade_nm
		     , bm.m_roomname
		     , DATE_FORMAT(bm.m_enday, '%Y.%m.%d') AS m_enday
		     , if(bm.m_reday = '2100-01-01','', DATE_FORMAT(bm.m_reday, '%Y.%m.%d')) AS m_reday
		     , bm.m_history
             , FN_LIDAY_FROM_TO(bm.sicode,bm.m_code,#{date_to},1,'%Y.%m.%d') AS m_liday1
             , FN_LIDAY_FROM_TO(bm.sicode,bm.m_code,#{date_to},2,'%Y.%m.%d') AS m_liday2
		     , bm.m_regist
		     , bm.m_juso1
		     , bm.m_juso2
		     , bm.m_post
		     , CONCAT(bm.m_juso1,' ',bm.m_juso2) AS m_juso
		     , bm.m_conname AS m_conname
			 , TIMESTAMPDIFF(YEAR, STR_TO_DATE(
			        CONCAT(CASE WHEN SUBSTRING(bm.m_jumin2,1,1) IN(1,2,5,6) THEN 19 /* 주민번호 뒷자리 */
			              		WHEN SUBSTRING(bm.m_jumin2,1,1) IN(3,4,7,8) THEN 20
			              		ELSE 19		END
			         	, bm.m_jumin1), '%Y%m%d'), CURRENT_DATE) AS age
		     , insert(insert(bm.m_jumin1,3,0,'-'),6,0,'-') AS b_date
		     , DATE_FORMAT(CURRENT_DATE,'%Y.%m.%d') AS today
		     , m_contel11	AS tel
		     , m_contel12	AS phone
		     , 종교	AS religion
		  FROM base_mate bm	  	  
		  WHERE bm.sicode = #{sicode}
			AND bm.m_enday <![CDATA[ <= ]]> #{date_to}
			AND bm.m_reday >= #{date_from}
		<if test="m_group != '전체'">
			AND bm.m_group = #{m_group}			/* A,B,C,D,E 중 하나인 경우 */
		</if>
		  ORDER BY bm.m_name
    </select>

    <select id="DAY00108_DS_LIST_CNT_S" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    /*  DAY00108_DS_LIST_CNT_S */
    	SELECT
    		COUNT(*) AS cnt
		FROM base_mate bm
		WHERE bm.sicode = #{sicode}
		 AND bm.m_enday <![CDATA[ <= ]]> #{date_to}
		 AND bm.m_reday >= #{date_from}
    </select>
    
    <select id="DAY00108_DS_PERSON_S" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    /*  DAY00108_DS_PERSON_S */
		SELECT
		      bm.sicode
		     , bm.m_group
		     , bm.m_code
		     , bm.m_name
		     , bm.성별 AS sex_nm
		     , FN_GRADE_NM(bm.sicode, bm.m_code, #{date_to}) AS grade_nm
		     , bm.m_roomname
		     , DATE_FORMAT(bm.m_enday, '%Y.%m.%d') AS m_enday
		     , if(bm.m_reday = '2100-01-01','', DATE_FORMAT(bm.m_reday, '%Y.%m.%d')) AS m_reday
		     , bm.m_history
             , FN_LIDAY_FROM_TO(bm.sicode,bm.m_code,#{date_to},1,'%Y.%m.%d') AS m_liday1
             , FN_LIDAY_FROM_TO(bm.sicode,bm.m_code,#{date_to},2,'%Y.%m.%d') AS m_liday2
		     , bm.m_regist
		     , bm.m_conname AS m_conname
			 , TIMESTAMPDIFF(YEAR, STR_TO_DATE(
			        CONCAT(CASE WHEN SUBSTRING(bm.m_jumin2,1,1) IN(1,2,5,6) THEN 19 /* 주민번호 뒷자리 */
			              		WHEN SUBSTRING(bm.m_jumin2,1,1) IN(3,4,7,8) THEN 20
			              		ELSE 19		END
			         	, bm.m_jumin1), '%Y%m%d'), CURRENT_DATE) AS age
		     , insert(insert(bm.m_jumin1,3,0,'-'),6,0,'-') AS b_date
		  FROM base_mate bm
		  WHERE bm.sicode = #{sicode}
			AND bm.m_code = #{m_code}
    </select>
    
	<select id="DAY00108_DS_DETAIL_S" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    /*  DAY00108_DS_DETAIL_S */
	    WITH RECURSIVE dayz AS (
			SELECT DATE_ADD(#{date_from}, INTERVAL -DAY(#{date_from}) + 1 DAY) AS dy
			UNION all
			SELECT DATE_ADD(dy, INTERVAL 1 DAY)
			FROM dayz
		WHERE dy <![CDATA[ < ]]> LAST_DAY(#{date_from})
		)
		SELECT DATE_FORMAT(dayz.dy, '%Y.%m.%d') AS allday
		     , CASE DAYOFWEEK(dayz.dy)
		     		WHEN 1 THEN '(일)'
		     		WHEN 2 THEN '(월)'
		     		WHEN 3 THEN '(화)'
		     		WHEN 4 THEN '(수)'
		     		WHEN 5 THEN '(목)'
		     		WHEN 6 THEN '(금)'
		     		WHEN 7 THEN '(토)'
		     		ELSE ''
		     	END AS week
			, #{sicode}	AS sicode
			, #{m_code}	AS m_code	     	
			, X.*
			, Y.mr_move
			, TRIM(IFNULL(Y.미입소,'')) AS 미입소
		FROM dayz
		LEFT OUTER JOIN (
			SELECT ba.ac_num
		     , ba.ac_name
		     , ba.ac_day
		     , ba.인지관리
		     , ba.기분
		     , CONCAT((CASE WHEN SUBSTRING(ba.기분,1,1) = '1' THEN '행복' ELSE '' END)
		       	, (CASE WHEN SUBSTRING(ba.기분,2,1) = '1' THEN '기쁨' ELSE '' END)
		     	, (CASE WHEN SUBSTRING(ba.기분,3,1) = '1' THEN '우울' ELSE '' END)
		     	, (CASE WHEN SUBSTRING(ba.기분,4,1) = '1' THEN '슬픔' ELSE '' END)
		     	, (CASE WHEN SUBSTRING(ba.기분,5,1) = '1' THEN '화남' ELSE '' END)
		       ) AS 오늘의기분
			 , ba.오전활동1
			 , ba.오전점검
			 , (CASE WHEN SUBSTRING(ba.오전점검,1,1) = '1' THEN '○' 
			   	WHEN SUBSTRING(ba.오전점검,1,1) = '2' THEN '△' 
			   	WHEN SUBSTRING(ba.오전점검,1,1) = '3' THEN 'X' 
			   	ELSE '' END)	AS 오전_즐거움
			 , (CASE WHEN SUBSTRING(ba.오전점검,2,1) = '1' THEN '○' 
			   	WHEN SUBSTRING(ba.오전점검,2,1) = '2' THEN '△' 
			   	WHEN SUBSTRING(ba.오전점검,2,1) = '3' THEN 'X' 
			    ELSE '' END)	AS 오전_이야기
			 , ba.오후활동1
			 , ba.오후점검
			 , (CASE WHEN SUBSTRING(ba.오후점검,1,1) = '1' THEN '○' 
			   	WHEN SUBSTRING(ba.오후점검,1,1) = '2' THEN '△' 
			   	WHEN SUBSTRING(ba.오후점검,1,1) = '3' THEN 'X' 
			   	ELSE '' END) AS 오후_즐거움	
			 , (CASE WHEN SUBSTRING(ba.오후점검,2,1) = '1' THEN '○' 
			   	WHEN SUBSTRING(ba.오후점검,2,1) = '2' THEN '△' 
			   	WHEN SUBSTRING(ba.오후점검,2,1) = '3' THEN 'X'     
			    ELSE '' END) AS 오후_이야기
			 , ba.작성자
		 	FROM base_actday ba
		 	WHERE ba.sicode = #{sicode}
		 	  AND ba.ac_code = #{m_code}
		  	  AND ba.ac_day BETWEEN #{date_from} AND #{date_to}
		  	) X
		  	ON dayz.dy = X.ac_day
		LEFT OUTER JOIN (
			SELECT kr.k_name
		        , kr.k_nalja
		        , (CASE WHEN IFNULL(kr.시작시간,'') = '' AND IFNULL(kr.종료시간,'') = '' THEN NULL
		                ELSE CONCAT(kr.시작시간,'-',kr.종료시간) END ) AS mr_move /* 송영시간 */
		        , kr.미입소     
		    FROM kmrecord kr
			WHERE kr.sicode = #{sicode}
			 AND kr.k_code = #{m_code}
		  	 AND kr.k_nalja BETWEEN #{date_from} AND #{date_to}
		) Y
			ON dayz.dy = Y.k_nalja		  	
		ORDER BY dayz.dy ASC  	
    </select>
    
    <select id="DAY00108_DS_RECORD_CNT" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    /* DAY00108_DS_RECORD_CNT */
		SELECT 
		 COUNT(*) AS cnt
		FROM base_mate bm
		INNER JOIN base_actday ba
			ON bm.sicode = ba.sicode
			AND bm.m_code = ba.ac_code
		WHERE bm.sicode = #{sicode}
			AND ba.ac_day BETWEEN #{date_from} AND #{date_to}
			AND TRIM(IFNULL(ba.인지관리,'')) <![CDATA[ <> ]]> ''
			AND bm.m_code IN
			<foreach item="code" collection="m_codes" open="(" separator="," close=")">
				#{code}
			</foreach>
    </select>    

	<select id="DAY00108_DS_YEAR_S" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    /*  DAY00108_DS_YEAR_S */
		WITH recursive cte1 AS (	-- 과거 10년 + 현재년 + 미래 9년
				SELECT YEAR(DATE_ADD(CURRENT_DATE, INTERVAL -10 YEAR)) AS CMCD,
						CONCAT(YEAR(DATE_ADD(CURRENT_DATE, INTERVAL -10 YEAR)), '년') AS CMNM
			UNION ALL
				SELECT CMCD + 1, CONCAT((CMCD + 1), '년') FROM cte1
				WHERE CMCD + 1 <![CDATA[ <= ]]> YEAR(CURRENT_DATE) + 9
		)
		
		SELECT * FROM cte1  
    </select>
</mapper>