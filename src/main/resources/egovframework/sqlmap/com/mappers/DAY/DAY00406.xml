<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">                                                                                                            
<!--
	/**
	 *
	 * WARNING: Auto create
	 * Template File Version : 1.0
	 * Create :2017-07-27 10:11
	 *
	 **/
	 *================================================================
     * 프로그램 ID  	: DAY00406
     * 프로그램 명     	: 4-6 월간 송영일지·시간오류
     * Description 		: 
     *================================================================
       작성일자         		|  작성자       |  비고
     *================================================================
       2022-05-12 11:00        	|  조기종		| 최초작성
     *================================================================
     *  Statement List
     *================================================================
        DAY00406_DS_LIST_S		월간 송영일지·시간오류 조회
        DAY00406_DS_DETAIL_S	일별 수급자 송영현황 조회
        DAY00406_DS_CAR_S		차량 콤보박스 조회
     *================================================================
-->
<mapper namespace="DAY00406">
	<!-- &gt; : >, &lt; : < -->
	<!-- 월간 송영일지·시간오류 조회 -->
    <select id="DAY00406_DS_LIST_S" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    /* 4-6 월간 송영일지·시간오류 조회 */
    WITH RECURSIVE line_num AS
    (
        SELECT 1 rnum
        UNION ALL
        SELECT lin.rnum + 1 AS rnum
        FROM line_num AS lin
        WHERE lin.rnum &lt; DATE_FORMAT(LAST_DAY(STR_TO_DATE(CONCAT(#{MON}, '01'), '%Y%m%d')), '%d')
    )
    , kmr_data AS
    (
        SELECT
          kmr.k_number
        , kmr.sicode
        , kmr.k_code
        , kmr.k_name
        , kmr.k_nalja
        , kmr.시작시간
        , kmr.종료시간
        , kmr.시작코스
        , kmr.종료코스
        , CASE WHEN SUBSTRING(kmr.미입소, 1, 1) &gt; 0 THEN 1 ELSE 0 END AS 미입소
        , CASE
            WHEN SUBSTRING(kmr.미입소, 1, 1) &gt; 0 THEN 0
            ELSE
              CASE
                WHEN (SUBSTRING(kmr.시작시간, 1, 2) * 60 + SUBSTRING(kmr.시작시간, 4, 2) &gt;= 60 AND SUBSTRING(kmr.종료시간, 1, 2) * 60 + SUBSTRING(kmr.종료시간, 4, 2) &gt; 0)
                     OR (SUBSTRING(kmr.시작시간, 1, 2) * 60 + SUBSTRING(kmr.시작시간, 4, 2) &gt; 0 AND SUBSTRING(kmr.종료시간, 1, 2) * 60 + SUBSTRING(kmr.종료시간, 4, 2) &gt;= 60) THEN 1
                ELSE 0
              END
          END AS 인원
        , CASE
            WHEN SUBSTRING(kmr.미입소, 1, 1) &gt; 0 THEN 0
            ELSE
              CASE
                WHEN SUBSTRING(kmr.시작시간, 1, 2) * 60 + SUBSTRING(kmr.시작시간, 4, 2) &gt;= 60
                     AND SUBSTRING(kmr.종료시간, 1, 2) * 60 + SUBSTRING(kmr.종료시간, 4, 2) &gt;= 60 THEN 1
                ELSE 0
              END
          END AS 출석
        , CASE WHEN kmr.시작거주지 = 'Y' THEN 1 ELSE 0 END AS 시작차량
        , CASE WHEN kmr.시작거주지 = 'Y' THEN 0 ELSE 1 END AS 시작미차량
        , CASE WHEN kmr.종료거주지 = 'Y' THEN 1 ELSE 0 END AS 종료차량
        , CASE WHEN kmr.종료거주지 = 'Y' THEN 0 ELSE 1 END AS 종료미차량
        , CASE WHEN mat.성별 = '남' THEN 1 ELSE 0 END AS 남자
        , CASE WHEN mat.성별 = '여' THEN 1 ELSE 0 END AS 여자
        FROM kmrecord AS kmr
        INNER JOIN base_mate AS mat
        ON (kmr.sicode = mat.sicode
        AND kmr.k_code = mat.m_code)
        WHERE kmr.sicode = #{SICODE}
        AND kmr.k_nalja &gt;= #{DATE_FROM}
        AND kmr.k_nalja &lt;= #{DATE_TO}
    )
    SELECT
      DATE_ADD(STR_TO_DATE(CONCAT(#{MON}, '01'), '%Y%m%d'), INTERVAL lin.rnum - 1 DAY) AS mday
    , DATE_FORMAT(DATE_ADD(STR_TO_DATE(CONCAT(#{MON}, '01'), '%Y%m%d'), INTERVAL lin.rnum - 1 DAY), '%Y.%m.%d') AS 일자
    , CASE DATE_FORMAT(DATE_ADD(STR_TO_DATE(CONCAT(#{MON}, '01'), '%Y%m%d'), INTERVAL lin.rnum - 1 DAY), '%w')
        WHEN 0 THEN '(일)'
        WHEN 1 THEN '(월)'
        WHEN 2 THEN '(화)'
        WHEN 3 THEN '(수)'
        WHEN 4 THEN '(목)'
        WHEN 5 THEN '(금)'
        WHEN 6 THEN '(토)'
      END AS 요일
    , mai.k_nalja
    , mai.sicode
    , mai.일인원
    , mai.시작차량
    , mai.시작미차량
    , mai.시작남자
    , mai.시작여자
    , mai.종료차량
    , mai.종료미차량
    , mai.종료남자
    , mai.종료여자
    , mai.시작중복
    , mai.종료중복
    FROM line_num AS lin
    LEFT OUTER JOIN
    (
        SELECT
          bsu.k_nalja
        , bsu.sicode
        , bsu.일인원
        , asu.시작차량
        , bsu.시작미차량
        , bsu.시작남자
        , bsu.시작여자
        , asu.종료차량
        , bsu.종료미차량
        , bsu.종료남자
        , bsu.종료여자
        , asu.시작중복
        , asu.종료중복
        FROM
        (
            SELECT
              sub.k_nalja
            , sub.sicode
            , SUM(sub.미입소) AS 미입소
            , SUM(sub.인원) AS 인원
            , SUM(sub.미입소) + SUM(sub.인원) AS 일인원
            , SUM(sub.시작차량) AS 시작차량
            , SUM(sub.시작미차량) AS 시작미차량
            , SUM(sub.남자) AS 시작남자
            , SUM(sub.여자) AS 시작여자
            , SUM(sub.종료차량) AS 종료차량
            , SUM(sub.종료미차량) AS 종료미차량
            , SUM(sub.남자) AS 종료남자
            , SUM(sub.여자) AS 종료여자
            FROM kmr_data AS sub
            WHERE sub.출석 = 1
            OR sub.미입소 = 1
            OR sub.인원 = 1
            GROUP BY sub.k_nalja
        ) AS bsu <!-- 전체 -->
        LEFT OUTER JOIN
        (
            SELECT
              a.k_nalja
            , a.sicode
            , SUM(a.출석) AS 출석
            , SUM(a.시작차량) AS 시작차량
            , SUM(a.시작미차량) AS 시작미차량
            , SUM(a.시작남자) AS 시작남자
            , SUM(a.시작여자) AS 시작여자
            , SUM(a.종료차량) AS 종료차량
            , SUM(a.종료미차량) AS 종료미차량
            , SUM(a.종료남자) AS 종료남자
            , SUM(a.종료여자) AS 종료여자
            , SUM(a.시작큰값) AS 시작큰값
            , SUM(a.종료큰값) AS 종료큰값
            , SUM(CASE WHEN a.시작중복 = a.시작큰값 AND a.시작큰값 &gt; 1 THEN 1 ELSE 0 END) AS 시작중복
            , SUM(CASE WHEN a.종료중복 = a.종료큰값 AND a.종료큰값 &gt; 1 THEN 1 ELSE 0 END) AS 종료중복
            FROM
            (
                SELECT
                  sub.k_nalja
                , sub.sicode
                , sub.미입소
                , sub.인원
                , sub.미입소 + sub.인원 AS 일인원
                , sub.출석
                , sub.시작차량
                , sub.시작미차량
                , sub.남자 AS 시작남자
                , sub.여자 AS 시작여자
                , sub.종료차량
                , sub.종료미차량
                , sub.남자 AS 종료남자
                , sub.여자 AS 종료여자
                , COUNT(*) OVER(PARTITION BY sub.k_nalja, sub.시작차량, sub.시작시간) AS 시작중복
                , COUNT(*) OVER(PARTITION BY sub.k_nalja, sub.종료차량, sub.종료시간) AS 종료중복
                , DENSE_RANK() OVER(PARTITION BY sub.k_nalja, sub.시작차량, sub.시작시간 ORDER BY sub.시작시간, sub.k_name) AS 시작큰값
                , DENSE_RANK() OVER(PARTITION BY sub.k_nalja, sub.종료차량, sub.종료시간 ORDER BY sub.종료시간, sub.k_name) AS 종료큰값
                , sub.시작시간
                , sub.종료시간
                , sub.k_name
                FROM kmr_data AS sub
                WHERE sub.출석 = 1
            ) AS a
            GROUP BY a.k_nalja
        ) AS asu <!-- 출석 -->
        ON (bsu.k_nalja = asu.k_nalja)
    ) AS mai
    ON (DATE_ADD(STR_TO_DATE(CONCAT(#{MON}, '01'), '%Y%m%d'), INTERVAL lin.rnum - 1 DAY) = mai.k_nalja)
    ORDER BY DATE_ADD(STR_TO_DATE(CONCAT(#{MON}, '01'), '%Y%m%d'), INTERVAL lin.rnum - 1 DAY)
    </select>
    
    <!-- 일별 수급자 송영현황 조회 -->
    <select id="DAY00406_DS_DETAIL_S" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    /* 4-6 일별 수급자 송영현황 조회 */
    SELECT
      kmr.sicode
    , kmr.k_nalja
    , kmr.k_name
    , mat.성별
    , mat.m_regist
    , kmr.시작코스
    , kmr.시작차번호
    , kmr.시작거주지
    , kmr.시작시간
    , kmr.시작기사
    , kmr.시작동승
    , kmr.종료코스
    , kmr.종료차번호
    , kmr.종료거주지
    , kmr.종료시간
    , kmr.종료기사
    , kmr.종료동승
    FROM kmrecord AS kmr
    INNER JOIN base_mate AS mat
    ON (kmr.sicode = mat.sicode
    AND kmr.k_code = mat.m_code)
    WHERE kmr.sicode = #{sicode}
    AND kmr.k_nalja = #{mday}
    AND kmr.시작시간 != ''
    ORDER BY
      kmr.시작코스
    , (CASE WHEN kmr.시작시간 = '' THEN '00:00' ELSE kmr.시작시간 END)
    , kmr.k_code
    </select>
    
    <!-- 차량 콤보박스 조회 -->
    <select id="DAY00406_DS_CAR_S" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    /* 4-6 차량 콤보박스 */
    SELECT
      dm.차구분 AS combocode
    , CONCAT(dm.차구분, '-', dm.차번호) AS comboname
    FROM day_motor AS dm
    WHERE dm.sicode = #{SICODE}
    AND dm.차표시 = 1
    </select>
    
    <!-- 차량별 리포트 출력전 데이터 조회 -->
    <select id="DAY00406_DS_REPORT_CAR_S" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    /* 4-6 차량별 리포트 출력전 데이터 조회 */
    SELECT k_nalja
    FROM kmrecord
    WHERE sicode = #{sicode}
    AND k_nalja &gt;= #{date_from}
    AND k_nalja &lt;= #{date_to}
    AND (시작코스 = #{gubun} OR 종료코스 = #{gubun})
    </select>
</mapper>