<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">                                                                                                            
<!--                                                                                                        
	/**                                                                                                       
	 *                                                                                                        
	 * WARNING: Auto create                                                                                   
	 * Template File Version : 1.0                                                                            
	 * Create :2017-07-27 10:11                                                                  
	 *                                                                                                        
	 **/                                                                                                      
	 *================================================================                  
     * 프로그램 ID  	: DAY00106
     * 프로그램 명     	: 1-6  월간 집중배설관찰기록
     * Description 	: 
     *================================================================                  
                작성일자         			|  작성자        |  비고                                    
     *================================================================                  
       2022-05-11 16:30        	|  박영주		| 최초작성                         

     *================================================================                      
     *  Statement List                                                                        
     *================================================================                      
        DAY00106_DS_LIST_S		조회                                                                                     
     *================================================================                      
-->
<mapper namespace="DAY00106">
	<!-- 조회 -->
    <select id="DAY00106_DS_LIST_S" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    /*  DAY00106_DS_LIST_S */
		SELECT bm.m_jumin1
			 , bm.m_jumin2
		     , bm.sicode
		     , bm.거주현황 AS s_nm
		     , bm.m_group
		     , bm.m_code
		     , bm.m_name
		     , bm.성별 AS sex_nm
             , FN_GRADE_NM(bm.sicode, bm.m_code, #{date_to}) AS grade_nm
		     , bm.m_roomname
		     , DATE_FORMAT(bm.m_enday, '%Y.%m.%d') AS m_enday
		     , if(bm.m_reday = '2100-01-01','', DATE_FORMAT(bm.m_reday, '%Y.%m.%d')) AS m_reday
		     , bm.m_history
             , FN_LIDAY_FROM_TO(bm.sicode,bm.m_code,#{date_to},1,'%Y.%m.%d') AS m_liday1
             , FN_LIDAY_FROM_TO(bm.sicode,bm.m_code,#{date_to},2,'%Y.%m.%d') AS m_liday2
		     , bm.m_regist
		     , bm.m_juso1
		     , bm.m_juso2
		     , bm.m_post
		     , CONCAT(bm.m_juso1,' ',bm.m_juso2) AS m_juso
		     , bm.m_conname AS m_conname
			 , FLOOR( (CAST(REPLACE(CURRENT_DATE,'-','') AS UNSIGNED) 
			 		 - CAST(CONCAT((CASE WHEN SUBSTRING(bm.m_jumin2,1,1) IN ('1','2') THEN '19'
                                         WHEN SUBSTRING(bm.m_jumin2,1,1) IN ('3','4') THEN '20'
                                         WHEN SUBSTRING(bm.m_jumin2,1,1) IN ('9','0') THEN '18'
                                         ELSE '19' END),bm.m_jumin1) AS UNSIGNED)) / 10000 ) AS age
		     , insert(insert(bm.m_jumin1,3,0,'-'),6,0,'-') AS b_date
		     , bm.등급
		     , DATE_FORMAT(CURRENT_DATE,'%Y.%m.%d') AS today
		     , m_contel11	AS tel
		     , m_contel12	AS phone
		     , 종교	AS religion
		  FROM base_mate bm		  
		  WHERE bm.sicode = #{sicode}
			AND bm.m_enday <![CDATA[ <= ]]> #{date_to}
			AND bm.m_reday >= #{date_from}
		<if test="m_group != '전체'">
			AND bm.m_group = #{m_group}			/* A,B,C,D,E 중 하나인 경우 */
		</if>
		  ORDER BY bm.m_name
    </select>

    <select id="DAY00106_DS_LIST_CNT_S" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    /*  DAY00106_DS_LIST_CNT_S */
    	SELECT
    		COUNT(*) AS cnt
		FROM base_mate bm
		WHERE bm.sicode = #{sicode}
		 AND bm.m_enday <![CDATA[ <= ]]> #{date_to}
		 AND bm.m_reday >= #{date_from}
    </select>
    
    <select id="DAY00106_DS_PERSON_S" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    /*  DAY00106_DS_PERSON_S */
		SELECT
		      bm.sicode
		     , bm.m_group
		     , bm.m_code
		     , bm.m_name
		     , bm.성별 AS sex_nm
             , FN_GRADE_NM(bm.sicode, bm.m_code, #{date_to}) AS grade_nm
		     , bm.m_roomname
		     , DATE_FORMAT(bm.m_enday, '%Y.%m.%d') AS m_enday
		     , if(bm.m_reday = '2100-01-01','', DATE_FORMAT(bm.m_reday, '%Y.%m.%d')) AS m_reday
		     , bm.m_history
		     , bm.m_regist
		     , bm.m_conname AS m_conname
			 , FLOOR( (CAST(REPLACE(CURRENT_DATE,'-','') AS UNSIGNED) 
			 		 - CAST(CONCAT((CASE WHEN SUBSTRING(bm.m_jumin2,1,1) IN ('1','2') THEN '19'
                                         WHEN SUBSTRING(bm.m_jumin2,1,1) IN ('3','4') THEN '20'
                                         WHEN SUBSTRING(bm.m_jumin2,1,1) IN ('9','0') THEN '18'
                                         ELSE '19' END),bm.m_jumin1) AS UNSIGNED)) / 10000 ) AS age
		     , INSERT(INSERT(bm.m_jumin1,3,0,'-'),6,0,'-') AS b_date
			 , CASE 배설변의
					WHEN 0 THEN ''
					WHEN 1 THEN '있다'
					WHEN 2 THEN '없다'
				END AS 변의장애
			 , CASE 배설뇨의
					WHEN 0 THEN ''
					WHEN 1 THEN '있다'
					WHEN 2 THEN '없다'
				END AS 뇨의장애
			 , CASE 배설보조
					WHEN 0 THEN ''
					WHEN 1 THEN '인공장루(요루)'
					WHEN 2 THEN '유치도뇨관'
					WHEN 3 THEN '기저귀착용'
					WHEN 4 THEN '도뇨관+기저귀'
				END AS 배설보조
		  FROM base_mate bm	  
		  WHERE bm.sicode = #{sicode}
			AND bm.m_code = #{m_code}
    </select>

	<select id="DAY00106_DS_DETAIL_S" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    /*  DAY00106_DS_DETAIL_S */
		SELECT '0' AS chk
			, kc.sicode
		 	, DATE_FORMAT(kc.cr_nalja,'%Y.%m.%d') AS cr_nalja
		   	, kc.cr_code
		   	, kc.cr_number
		   	, CASE DAYOFWEEK(kc.cr_nalja)
		   		WHEN 1 THEN '(일)'
		   		WHEN 2 THEN '(월)'
		   		WHEN 3 THEN '(화)'
		   		WHEN 4 THEN '(수)'
		   		WHEN 5 THEN '(목)'
		   		WHEN 6 THEN '(금)'
		   		WHEN 7 THEN '(토)'
		   	  END AS week
			, TRIM(kc.소변관찰) AS a_cont
			, TRIM(kc.배변관찰) AS b_cont
		   	, TRIM(kc.기저귀교환) AS c_cont
		   	, TRIM(kc.옷교환) AS d_cont
		   	, kc.주간담당
		   	, kc.야간담당
		FROM kmcretion kc
		WHERE kc.sicode = #{sicode}
		  AND kc.cr_nalja BETWEEN #{date_from} AND #{date_to}
		  AND kc.cr_code = #{m_code}
    </select>

	<select id="DAY00106_DS_YEAR_S" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    /*  DAY00106_DS_YEAR_S */
		WITH recursive cte1 AS (	-- 과거 10년
				SELECT YEAR(DATE_ADD(CURRENT_DATE, INTERVAL -10 YEAR)) AS CMCD,
						CONCAT(YEAR(DATE_ADD(CURRENT_DATE, INTERVAL -10 YEAR)), '년') AS CMNM
			UNION ALL
				SELECT CMCD + 1, CONCAT((CMCD + 1), '년') FROM cte1
				WHERE CMCD + 1 <![CDATA[ <= ]]> YEAR(CURRENT_DATE)
		), cte2 AS (		-- 미래 9년
				SELECT YEAR(DATE_ADD(CURRENT_DATE, INTERVAL 1 YEAR)) AS CMCD,
						CONCAT(YEAR(DATE_ADD(CURRENT_DATE, INTERVAL 1 YEAR)), '년') AS CMNM
			UNION ALL
				SELECT CMCD + 1, CONCAT((CMCD + 1), '년') FROM cte2
				WHERE CMCD + 1 <![CDATA[ < ]]> YEAR(DATE_ADD(CURRENT_DATE, INTERVAL 10 YEAR))
		)
		
		SELECT * FROM cte1
		UNION ALL
		SELECT * FROM cte2    
    </select>
</mapper>