<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="mFrameBottom" width="480" height="90" titletext="Mobile Bottom Frame" onload="mFrameBottom_onload">
    <Layouts>
      <Layout width="480" height="90" screenid="Mobile">
        <Div id="div_menuControl" taborder="0" left="0" top="0" right="0" bottom="0" border="1px solid #cccccc,0px none,0px none">
          <Layouts>
            <Layout/>
          </Layouts>
        </Div>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[/***********************************************************************
 * 화면ID   	: mFrameBottom
 * 화면명   	: mFrameBottom
 * 화면설명 	: 모바일 아래쪽 메뉴를 표시한다.
 * 작성일   	: 2021-07-06
 * 작성자   	: 조기종
 * 수정이력 	: ↓↓↓↓↓↓↓
 ***********************************************************************
 *     수정일     수정자   내용
 ***********************************************************************
 *
 ***********************************************************************
 */
 
/***********************************************************************
 * Include
 ***********************************************************************/
include "lib::sct_util.xjs"
include "lib::sct_com.xjs"
/***********************************************************************
 * Form Variables
 ***********************************************************************/
this.fv_btnArr = new Array();
this.fv_menuIdx = 1;

/***********************************************************************
 * Form Event Functions
 ***********************************************************************/
this.mFrameBottom_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	this.fn_initDataset();
	this.fn_makeMenuButton(this.ds_menu);
	for(let i = 0; i < this.div_menuControl.form.components.length; i++)
	{
		this.fv_btnArr.push(this.div_menuControl.form.components[i]);
	}
	this.fn_setBtnImg();
	
	//디버깅팝업 이벤트 추가
	obj.addEventHandler("onkeyup", this.fn_openDebugPopup, this);
	
	this.div_menuControl.form.resetScroll();
	
	this.div_menuControl.form.components[1].setFocus();
	this.div_menuControl.form.components[1].click();
};

/***********************************************************************
 * Form Initialize Functions
 ***********************************************************************/
/**	
 * 설명 	: Dataset을 초기화한다.
 * params  	: None
 * return Type 	: None
 */
this.fn_initDataset = function ()
{
	nexacro.getApplication().gds_menu.set_enableevent(false);
	this.ds_menu.clearData();
	nexacro.getApplication().gds_menu.filter("MENU_LEVEL==0");
	this.ds_menu.copyData(nexacro.getApplication().gds_menu, true);
	nexacro.getApplication().gds_menu.filter("");
	nexacro.getApplication().gds_menu.set_enableevent(true);
};

/***********************************************************************
 * User Functions
 ***********************************************************************/
/**	
 * 설명 	: 0레벨 메뉴 버튼을 생성한다.
 * params  	: 1. ds - 메뉴 Dataset
 * return Type 	: None
 */
this.fn_makeMenuButton = function (ds:Dataset)
{
	const nRowCnt = ds.rowcount;

	const width = 119;
	const height = 98; 
	let left = 0;
	const top = 0;
	const right = null;
	const bottom = null;

	for (let i = 0; i < nRowCnt; i++) 
	{
		const sId = "btn_" + ds.getColumn(i, "MENU_CD");
		const sName = ds.getColumn(i, "MENU_NM");
		left = left + (i == 0 ? 0 : width);
		this._makeButton(sId, sName, left, top, width, height, right, bottom);
	}
};

/**	
 * 설명 	: 메뉴 버튼을 그린다.
 * params  	: 1. id - Button ID
 2. name - Button Text
 3. left
 4. top
 5. width
 6. height
 7. right
 8. bottom
 * return Type 	: None
 */
this._makeButton = function (id, name, left, top, width, height, right, bottom)
{
	const objButton = new Button();
	objButton.init(id, left, top, width, height, right, bottom);
	objButton.set_text(name);
	objButton.set_cssclass("mMainMenu");
	objButton.__menuid = id.replace("btn_", "");
	objButton.addEventHandler("onclick", this.__menu_onclick, this);
	objButton.addEventHandler("onsetfocus", this.__menu_onsetfocus, this);

	this.div_menuControl.form.addChild(id, objButton);
	objButton.show();
};

/**	
 * 설명 	: Menu Button Click Event.
 * params  	: 1. obj
 2. e
 * return Type 	: None
 */
this.__menu_onclick = function (obj:Button, e:nexacro.ClickEventInfo)
{
	const id = obj.__menuid;
	const ds = nexacro.getApplication().gds_menu;
	const nRow = ds.findRow("MENU_CD", id);
	const grp = this.ds_menu.lookup("MENU_CD", id, "MENU_GRP");
	const url = this.ds_menu.lookup("MENU_CD", id, "PAGE_URL");
	const title = this.ds_menu.lookup("MENU_CD", id, "MENU_NM");
	const buttonAuth = Sct.getButtonAuth(ds, nRow);
	const winKey = id + "_" + nexacro.getApplication().gds_openMenu.rowcount + "_" + parseInt(Math.random() * 100);
	
	const openMenuRow = nexacro.getApplication().gds_openMenu.findRow("MENU_CD", id);
	
	if(openMenuRow >= 0)
	{
		const openWinKey = nexacro.getApplication().gds_openMenu.getColumn(openMenuRow, "WIN_KEY");
		nexacro.getApplication().av_workFrameSet[openWinKey].setFocus();
		return;
	}
	
	for(let i = 0; i < nexacro.getApplication().av_workFrameSet.frames.length; i++)
	{
		nexacro.getApplication().av_workFrameSet.frames[i].destroy();
	}
	
	const objNewWin = new ChildFrame;
		  objNewWin.init(winKey, 0, 0, null, null);
		  objNewWin.set_formurl("MobileFrame::mFrameWork.xfdl");
		  objNewWin.arguments = [];
		  
		  objNewWin.arguments["winKey"] = winKey;
		  objNewWin.arguments["menuId"] = id;
		  objNewWin.arguments["menuUrl"] = url;
		  objNewWin.arguments["menuTitle"] = title;
		  objNewWin.arguments["buttonAuth"] = buttonAuth;	  
	
	nexacro.getApplication().av_workFrameSet.addChild(winKey, objNewWin);
	
	objNewWin.set_dragmovetype("none");
	objNewWin.set_showtitlebar(false);
	objNewWin.set_resizable(false);
	objNewWin.set_border("0 none #808080");
	objNewWin.set_openstatus("maximize");
	
	objNewWin.show();
	
	// 쿠키로 로그인 생략시 topFrame이 늦게 로딩되기 때문에 예외처리함.
	try
	{
		nexacro.getApplication().av_topFrame.form.sta_top.set_text(title);
	}
	catch(e)
	{
		trace("타이틀 세팅 에러");
	}
	
	
	if(title == "생활현황")
	{
		nexacro.getApplication().av_topFrame.form.formId = "";
		nexacro.getApplication().av_topFrame.form.preUrl = "";
		nexacro.getApplication().av_topFrame.form.preTitle = "";
	}
	else
	{
		const tRow = ds.findRow("MENU_NM", "생활현황");
		const tId = ds.getColumn(tRow, "MENU_CD");
		const tUrl = ds.getColumn(tRow, "PAGE_URL");
		const tTitle = ds.getColumn(tRow, "MENU_NM");
		
		nexacro.getApplication().av_topFrame.form.formId = tId;
		nexacro.getApplication().av_topFrame.form.preUrl = tUrl;
		nexacro.getApplication().av_topFrame.form.preTitle = tTitle;
	}
};

// 메뉴 버튼 focus 이벤트
this.__menu_onsetfocus = function(obj:nexacro.Button, e:nexacro.SetFocusEventInfo)
{
	this.fn_menuNonSelect();
	
	const anyIcon = obj.icon;
	const arAnyIcon = anyIcon.split("_");
	const anyIcon2 = arAnyIcon[0] + "_on.png')";
	
	obj.set_icon(anyIcon2);
	obj.set_color("#234381");
	obj.set_background("#ebebeb");
};

// 메뉴 전체 비활성 색으로 세팅
this.fn_menuNonSelect = function()
{
	for(let i = 0; i < this.fv_btnArr.length; i++) {
		const anyIcon = this.div_menuControl.form.all[this.fv_btnArr[i].name].icon;
		this.div_menuControl.form.all[this.fv_btnArr[i].name].set_background("");
		if(anyIcon.indexOf("_on") != -1) {
			const arAnyIcon = anyIcon.split("_");
			const anyIcon2 = arAnyIcon[0] + "_off.png')";
			this.div_menuControl.form.all[this.fv_btnArr[i].name].set_icon(anyIcon2);
			this.div_menuControl.form.all[this.fv_btnArr[i].name].set_color("#999999");
		}
	}
};

// 메뉴 아이콘 세팅
this.fn_setBtnImg = function ()
{
	//trace("fn_setBtnImg");

	for (let i = 0; i < this.fv_btnArr.length; i++) 
	{
		//trace("btn : " + this.fv_btnArr[i].name);
		//trace("btnText : " + this.fv_btnArr[i].text);
		let imgFileNm = "";
		const btnText = this.fv_btnArr[i].text;
		switch (btnText) {
			case '공지사항' :
				imgFileNm = "menu1_off.png";
				break;
			case '생활현황' :
				imgFileNm = "menu2_off.png";
				break;
			case '예약하기' :
				imgFileNm = "menu3_off.png";
				break;
			case '마이페이지' :
				imgFileNm = "menu4_off.png";
				break;
		}
		const name = this.fv_btnArr[i].name;
		this.div_menuControl.form.all[name].set_icon("url('theme://images/" + imgFileNm + "')");
	}
};
]]></Script>
    <Objects>
      <Dataset id="ds_menu">
        <ColumnInfo>
          <Column id="LANG_CD" type="STRING" size="256"/>
          <Column id="MENU_CD" type="STRING" size="256"/>
          <Column id="MENU_NM" type="STRING" size="256"/>
          <Column id="MENU_LEVEL" type="STRING" size="256"/>
          <Column id="MENU_GRP" type="STRING" size="256"/>
          <Column id="HIGH_MENU_CD" type="STRING" size="256"/>
          <Column id="MENU_ID" type="STRING" size="256"/>
          <Column id="PAGE_URL" type="STRING" size="256"/>
          <Column id="MENU_PARAM" type="STRING" size="256"/>
          <Column id="MENU_STATUS" type="STRING" size="256"/>
          <Column id="DESCRIPTION" type="STRING" size="256"/>
          <Column id="USE_YN" type="STRING" size="256"/>
          <Column id="SHOW_YN" type="STRING" size="256"/>
          <Column id="CLS_AUTH" type="STRING" size="256"/>
          <Column id="SEAR_AUTH" type="STRING" size="256"/>
          <Column id="ADD_AUTH" type="STRING" size="256"/>
          <Column id="DEL_AUTH" type="STRING" size="256"/>
          <Column id="SAVE_AUTH" type="STRING" size="256"/>
          <Column id="PRN_AUTH" type="STRING" size="256"/>
          <Column id="APPV_AUTH" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
  </Form>
</FDL>
